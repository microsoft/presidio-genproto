syntax = "proto3";
import "common.proto";
package types;

/* AnalyzeTemplate represents the analyze service template definition */
message AnalyzeTemplate {
    repeated FieldTypes fields = 1;
}


/* AnonymizeTemplate represents the anonymize service template definition */
message AnonymizeTemplate {
    string name = 1;
    string displayName = 2;
    string description = 3;
    string createTime = 4;
    string modifiedTime = 5;
    repeated FieldTypeTransformation fieldTypeTransformations = 6;
}

/* FieldTypeTransformation represents the transformation for array of fields types */
message FieldTypeTransformation {
  repeated FieldTypes fields = 1;
  Transformation transformation = 2;
}


/* Transformation represents the transformation type */
message Transformation {
  ReplaceValue replaceValue = 2;
  RedactValue redactValue = 3;
  HashValue hashValue = 4;
  MaskValue maskValue = 5;
  MaskImage maskImage = 6;
}

message ReplaceValue {
  string newValue = 1;
}

message RedactValue {
}

message HashValue {
}

message MaskValue {
    string maskingCharacter = 1;
    int32 charsToMask = 2;
    bool fromEnd = 3;
}

message MaskImage {
    ImageLocations imageLocations = 1; 
    string imageToMaskBase64 =2;
}

message DBConfig {
    string connectionString = 2;
    string tableName = 3;
}

message Databinder {
  DBConfig dbConfig = 1;
  CloudStorageConfig cloudStorageConfig = 2;
}

/* DatabinderTemplate represents the analyzer service outputs definition */
message DatabinderTemplate {
  string analyzerKind = 1;
  string anonymizerKind = 2;
  Databinder databinder = 3;
}

message BlobStorageConfig {
    string accountName = 1;
    string accountKey = 2;
    string containerName = 3;
}

message S3Config {
    string accessId = 1;
    string accessKey = 2;
    string region = 3;
    string bucketName = 4;
}

message CloudStorageConfig {
  BlobStorageConfig blobStorageConfig = 1;
  S3Config s3Config = 2;
}

message StreamConfig {
  KafkaConfig kafkaConfig = 1;
  EHConfig ehConfig = 2;
}

message KafkaConfig {
  string address = 1;
  string topic = 2;
  int32 partitionCount = 3;
  string saslUsername = 4;
  string saslPassword = 5;
}

message EHConfig {
  string ehNamespace = 1;
  string ehName = 2;
  string ehConnectionString = 3;
  string ehKeyName = 4;
  string ehKeyValue = 5;
  int32 partitionCount = 6;
}

message StreamTemplate {
  string kind = 1;
  StreamConfig streamConfig = 2;
  string minProbability = 3;
  string analyzeTemplateId = 4;
  string anonymizeTemplateId = 5;
  string databinderTemplateId = 6;
}

message ScanTemplate {
    string kind = 1;
    CloudStorageConfig cloudStorageConfig = 2;
    string minProbability = 3;
    string analyzeTemplateId = 4;
    string anonymizeTemplateId = 5;
    string databinderTemplateId = 6;
}

message CronJobTemplate {
    string name = 1;
    string description = 2;
    Trigger trigger = 3;
    string scanTemplateId = 4;
}

message JobTemplate {
    string name = 1;
    string description = 2;
    Trigger trigger = 3;
    string scanTemplateId = 4;
    string streamTemplateId = 5;
}

message Trigger {
    Schedule schedule = 1;
}

message Schedule {
    string recurrencePeriodDuration = 1;
}

message ImageWord {
	string XLocation  = 1;
	string Width      = 2;
	string Height     = 3;
	string YLocation  = 4;
	string Text    = 5;
  int32 startPosition = 6;
  int32 endPosition = 7;
}

message ImageLocations  {
	repeated ImageWord Words  = 1;
	string ImageText  = 2;
}
