syntax = "proto3";
import "common.proto";
import "template.proto";
package types;


// AnonymizeApiRequest represents the request to the API HTTP service 
message AnonymizeImageApiRequest {
  // The image data to anonymize in bytes format
  bytes data = 1;
  // The image type JPEG/PNG/TIFF
  string imageType = 2;
  // The analyze template id - anonymization is done according to analyzing results. 
  // One of analyzeTemplateId or analyzeTemplate have to be configured.
  string analyzeTemplateId = 3;
  // The anonymize image template id - represents the anonymize configuration, which fields to anonymize and how.
  string anonymizeImageTemplateId = 4;
  // Optional parameter for running the analyzer without creating a template.
  AnalyzeTemplate analyzeTemplate = 5;
  // Optional parameter for running the anonymize image without creating a template. 
  AnonymizeImageTemplate anonymizeImageTemplate = 6;
  // Anoymize image type detection OCR / Azure OCR / Azure Face
  DetectionTypeEnum detectionType = 7;
}

// AnonymizeRequest represents the request to the anonymize service via GRPC 
message AnonymizeImageRequest {
  // The Image to anonymize
  Image image = 1;
  // The anonymize template represent the anonymize configuration, which fields to anonymize and how
  AnonymizeImageTemplate template = 2;
  // Anoymize image detection type  OCR / Azure OCR / Azure Face
  DetectionTypeEnum detectionType = 3;
  // The analyze result containing the field type and location of the sensetive data to be anonymized.
  repeated AnalyzeResult analyzeResults = 4;
}

// AnonymizeResponse represents the anonymize service response 
message AnonymizeImageResponse {
    Image image =1;
}

// The Anonymize Service is a service that anonymizes a given the text using predefined analyzers fields and anonymize configurations.
service AnonymizeImageService {
  // Apply method will execute on the given request and return the anonymize response with the sensitive text anonymized
  rpc Apply (AnonymizeImageRequest) returns (AnonymizeImageResponse) {}
}