syntax = "proto3";
package types;

// Pattern represents one regex (pattern) that is able to detect a certain
// entity and how confident the result is
message Pattern {
    // The name of the pattern, unique
    string name = 1;
    // The Regex used by this recognizer
    string regex = 2;
    // The confidence of the result
    float score = 3;
}

// PatternRecognizer represents a recognizer which has the ability to detect
// entities using one or more Patterns
message PatternRecognizer {
    // The name of the recognizer, unique
    string name = 1;
    // The entity name which this recognizer can detect
    string entity = 2;
    // The supported language code, in ISO-639 format, https://en.wikipedia.org/wiki/ISO_639-1
    string language = 3;
    // List of supported patterns by this recognizer
    repeated Pattern patterns = 4;
    // A list of words that are considered PII and should always be detected
    //e.g. ["Mr", "Mrs", "account"]
    repeated string blacklist = 5;
    // A list of strings that if found in the surroundings of the entity, increase the score of the result
    // e.g. ["name", "address", ]
    repeated string contextPhrases = 6;
}

// RecognizerInsertOrUpdateRequest represents the request for
// inserting a new or updating an existing pattern recognizer
message RecognizerInsertOrUpdateRequest {
    // The recognizer to be inserted or updated
    PatternRecognizer value = 1;
}

// RecognizerDeleteRequest represents the request for deleting an existing recognizer
message RecognizerDeleteRequest {
    // Name of the requested recognizer
    string name = 1;
}

// RecognizerGetRequest represents the request for retrieving a recognizer
message RecognizerGetRequest {
    // Name of the requested recognizer
    string name = 1;
}

// RecognizersGetAllRequest represents the request for retrieving all recognizers
message RecognizersGetAllRequest {
}

// RecognizerGetTimestampRequest represents the request for getting the timestamp when the recognizers store was last updated 
message RecognizerGetTimestampRequest {
}

// RecognizersStoreResponse represents a store response
message RecognizersStoreResponse {
}

// RecognizersGetResponse represents a response to a get request
message RecognizersGetResponse {
    // An array of recognizers
    repeated PatternRecognizer recognizers = 1;
}

// RecognizerTimestampResponse represents the response of getting the time of last store update
message RecognizerTimestampResponse {
    // The time (in seconds) of the last store update
    uint64 unixTimestamp = 1;
}

// The Recognizers Store Service is a service that handles pattern recognizers in a persistent storage
service RecognizersStoreService {
  rpc ApplyInsert (RecognizerInsertOrUpdateRequest) returns (RecognizersStoreResponse) {}
  rpc ApplyUpdate (RecognizerInsertOrUpdateRequest) returns (RecognizersStoreResponse) {}
  rpc ApplyDelete (RecognizerDeleteRequest) returns (RecognizersStoreResponse) {}
  rpc ApplyGet (RecognizerGetRequest) returns (RecognizersGetResponse) {}
  rpc ApplyGetAll (RecognizersGetAllRequest) returns (RecognizersGetResponse) {}
  rpc ApplyGetTimestamp(RecognizerGetTimestampRequest) returns (RecognizerTimestampResponse) {}
}