# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: databinder.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import common_pb2 as common__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='databinder.proto',
  package='types',
  syntax='proto3',
  serialized_pb=_b('\n\x10\x64\x61tabinder.proto\x12\x05types\x1a\x0c\x63ommon.proto\"O\n\x11\x44\x61tabinderRequest\x12,\n\x0e\x61nalyzeResults\x18\x01 \x03(\x0b\x32\x14.types.AnalyzeResult\x12\x0c\n\x04path\x18\x02 \x01(\t\"\x14\n\x12\x44\x61tabinderResponse2S\n\x11\x44\x61tabinderService\x12>\n\x05\x41pply\x12\x18.types.DatabinderRequest\x1a\x19.types.DatabinderResponse\"\x00\x62\x06proto3')
  ,
  dependencies=[common__pb2.DESCRIPTOR,])




_DATABINDERREQUEST = _descriptor.Descriptor(
  name='DatabinderRequest',
  full_name='types.DatabinderRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='analyzeResults', full_name='types.DatabinderRequest.analyzeResults', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='path', full_name='types.DatabinderRequest.path', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=41,
  serialized_end=120,
)


_DATABINDERRESPONSE = _descriptor.Descriptor(
  name='DatabinderResponse',
  full_name='types.DatabinderResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=122,
  serialized_end=142,
)

_DATABINDERREQUEST.fields_by_name['analyzeResults'].message_type = common__pb2._ANALYZERESULT
DESCRIPTOR.message_types_by_name['DatabinderRequest'] = _DATABINDERREQUEST
DESCRIPTOR.message_types_by_name['DatabinderResponse'] = _DATABINDERRESPONSE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

DatabinderRequest = _reflection.GeneratedProtocolMessageType('DatabinderRequest', (_message.Message,), dict(
  DESCRIPTOR = _DATABINDERREQUEST,
  __module__ = 'databinder_pb2'
  # @@protoc_insertion_point(class_scope:types.DatabinderRequest)
  ))
_sym_db.RegisterMessage(DatabinderRequest)

DatabinderResponse = _reflection.GeneratedProtocolMessageType('DatabinderResponse', (_message.Message,), dict(
  DESCRIPTOR = _DATABINDERRESPONSE,
  __module__ = 'databinder_pb2'
  # @@protoc_insertion_point(class_scope:types.DatabinderResponse)
  ))
_sym_db.RegisterMessage(DatabinderResponse)



_DATABINDERSERVICE = _descriptor.ServiceDescriptor(
  name='DatabinderService',
  full_name='types.DatabinderService',
  file=DESCRIPTOR,
  index=0,
  options=None,
  serialized_start=144,
  serialized_end=227,
  methods=[
  _descriptor.MethodDescriptor(
    name='Apply',
    full_name='types.DatabinderService.Apply',
    index=0,
    containing_service=None,
    input_type=_DATABINDERREQUEST,
    output_type=_DATABINDERRESPONSE,
    options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_DATABINDERSERVICE)

DESCRIPTOR.services_by_name['DatabinderService'] = _DATABINDERSERVICE

# @@protoc_insertion_point(module_scope)
