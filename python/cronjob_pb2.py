# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: cronjob.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import template_pb2 as template__pb2
import scan_pb2 as scan__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='cronjob.proto',
  package='types',
  syntax='proto3',
  serialized_pb=_b('\n\rcronjob.proto\x12\x05types\x1a\x0etemplate.proto\x1a\nscan.proto\".\n\x11\x43ronJobApiRequest\x12\x19\n\x11\x43ronJobTemplateId\x18\x01 \x01(\t\"}\n\x0e\x43ronJobRequest\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x13\n\x0b\x64\x65scription\x18\x02 \x01(\t\x12\x1f\n\x07trigger\x18\x03 \x01(\x0b\x32\x0e.types.Trigger\x12\'\n\x0bscanRequest\x18\x04 \x01(\x0b\x32\x12.types.ScanRequest\"\x11\n\x0f\x43ronJobResponse2J\n\x0e\x43ronJobService\x12\x38\n\x05\x41pply\x12\x15.types.CronJobRequest\x1a\x16.types.CronJobResponse\"\x00\x62\x06proto3')
  ,
  dependencies=[template__pb2.DESCRIPTOR,scan__pb2.DESCRIPTOR,])




_CRONJOBAPIREQUEST = _descriptor.Descriptor(
  name='CronJobApiRequest',
  full_name='types.CronJobApiRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='CronJobTemplateId', full_name='types.CronJobApiRequest.CronJobTemplateId', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=52,
  serialized_end=98,
)


_CRONJOBREQUEST = _descriptor.Descriptor(
  name='CronJobRequest',
  full_name='types.CronJobRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='types.CronJobRequest.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='description', full_name='types.CronJobRequest.description', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='trigger', full_name='types.CronJobRequest.trigger', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='scanRequest', full_name='types.CronJobRequest.scanRequest', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=100,
  serialized_end=225,
)


_CRONJOBRESPONSE = _descriptor.Descriptor(
  name='CronJobResponse',
  full_name='types.CronJobResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=227,
  serialized_end=244,
)

_CRONJOBREQUEST.fields_by_name['trigger'].message_type = template__pb2._TRIGGER
_CRONJOBREQUEST.fields_by_name['scanRequest'].message_type = scan__pb2._SCANREQUEST
DESCRIPTOR.message_types_by_name['CronJobApiRequest'] = _CRONJOBAPIREQUEST
DESCRIPTOR.message_types_by_name['CronJobRequest'] = _CRONJOBREQUEST
DESCRIPTOR.message_types_by_name['CronJobResponse'] = _CRONJOBRESPONSE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

CronJobApiRequest = _reflection.GeneratedProtocolMessageType('CronJobApiRequest', (_message.Message,), dict(
  DESCRIPTOR = _CRONJOBAPIREQUEST,
  __module__ = 'cronjob_pb2'
  # @@protoc_insertion_point(class_scope:types.CronJobApiRequest)
  ))
_sym_db.RegisterMessage(CronJobApiRequest)

CronJobRequest = _reflection.GeneratedProtocolMessageType('CronJobRequest', (_message.Message,), dict(
  DESCRIPTOR = _CRONJOBREQUEST,
  __module__ = 'cronjob_pb2'
  # @@protoc_insertion_point(class_scope:types.CronJobRequest)
  ))
_sym_db.RegisterMessage(CronJobRequest)

CronJobResponse = _reflection.GeneratedProtocolMessageType('CronJobResponse', (_message.Message,), dict(
  DESCRIPTOR = _CRONJOBRESPONSE,
  __module__ = 'cronjob_pb2'
  # @@protoc_insertion_point(class_scope:types.CronJobResponse)
  ))
_sym_db.RegisterMessage(CronJobResponse)



_CRONJOBSERVICE = _descriptor.ServiceDescriptor(
  name='CronJobService',
  full_name='types.CronJobService',
  file=DESCRIPTOR,
  index=0,
  options=None,
  serialized_start=246,
  serialized_end=320,
  methods=[
  _descriptor.MethodDescriptor(
    name='Apply',
    full_name='types.CronJobService.Apply',
    index=0,
    containing_service=None,
    input_type=_CRONJOBREQUEST,
    output_type=_CRONJOBRESPONSE,
    options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_CRONJOBSERVICE)

DESCRIPTOR.services_by_name['CronJobService'] = _CRONJOBSERVICE

# @@protoc_insertion_point(module_scope)
