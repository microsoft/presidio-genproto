// Code generated by protoc-gen-go. DO NOT EDIT.
// source: scan.proto

package types

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// ScanRequest represents the request to the scanner service via GRPC
type ScanRequest struct {
	// The scanner input kind
	Kind string `protobuf:"bytes,1,opt,name=kind,proto3" json:"kind,omitempty"`
	// The cloud storage configuration for scanning cloud storage such as AzureBlobStorage, AWS S3 And Google Storage
	CloudStorageConfig *CloudStorageConfig `protobuf:"bytes,2,opt,name=cloudStorageConfig,proto3" json:"cloudStorageConfig,omitempty"`
	// The minProbability will filter results which has lower certainty than the provided value.
	MinProbability string `protobuf:"bytes,3,opt,name=minProbability,proto3" json:"minProbability,omitempty"`
	// The analyzer template configures the fields to analyze
	AnalyzeTemplate *AnalyzeTemplate `protobuf:"bytes,4,opt,name=analyzeTemplate,proto3" json:"analyzeTemplate,omitempty"`
	// The anonymizer template configures how to anonymize the sensitive data [optional]
	AnonymizeTemplate *AnonymizeTemplate `protobuf:"bytes,5,opt,name=anonymizeTemplate,proto3" json:"anonymizeTemplate,omitempty"`
	// The datasinkTemplate configures the output destination of the analyzer/anonymizer results
	DatasinkTemplate     *DatasinkTemplate `protobuf:"bytes,6,opt,name=datasinkTemplate,proto3" json:"datasinkTemplate,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ScanRequest) Reset()         { *m = ScanRequest{} }
func (m *ScanRequest) String() string { return proto.CompactTextString(m) }
func (*ScanRequest) ProtoMessage()    {}
func (*ScanRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_scan_63b0bbbedd3774ec, []int{0}
}
func (m *ScanRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ScanRequest.Unmarshal(m, b)
}
func (m *ScanRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ScanRequest.Marshal(b, m, deterministic)
}
func (dst *ScanRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ScanRequest.Merge(dst, src)
}
func (m *ScanRequest) XXX_Size() int {
	return xxx_messageInfo_ScanRequest.Size(m)
}
func (m *ScanRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ScanRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ScanRequest proto.InternalMessageInfo

func (m *ScanRequest) GetKind() string {
	if m != nil {
		return m.Kind
	}
	return ""
}

func (m *ScanRequest) GetCloudStorageConfig() *CloudStorageConfig {
	if m != nil {
		return m.CloudStorageConfig
	}
	return nil
}

func (m *ScanRequest) GetMinProbability() string {
	if m != nil {
		return m.MinProbability
	}
	return ""
}

func (m *ScanRequest) GetAnalyzeTemplate() *AnalyzeTemplate {
	if m != nil {
		return m.AnalyzeTemplate
	}
	return nil
}

func (m *ScanRequest) GetAnonymizeTemplate() *AnonymizeTemplate {
	if m != nil {
		return m.AnonymizeTemplate
	}
	return nil
}

func (m *ScanRequest) GetDatasinkTemplate() *DatasinkTemplate {
	if m != nil {
		return m.DatasinkTemplate
	}
	return nil
}

func init() {
	proto.RegisterType((*ScanRequest)(nil), "types.ScanRequest")
}

func init() { proto.RegisterFile("scan.proto", fileDescriptor_scan_63b0bbbedd3774ec) }

var fileDescriptor_scan_63b0bbbedd3774ec = []byte{
	// 234 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x90, 0xcf, 0x4a, 0xc3, 0x40,
	0x10, 0xc6, 0x49, 0x6d, 0x0b, 0x4e, 0xa1, 0xea, 0x1c, 0x74, 0xf5, 0x54, 0x3c, 0x48, 0x4f, 0x39,
	0xe8, 0x0b, 0x28, 0x11, 0xc1, 0x9b, 0x6c, 0x7d, 0x81, 0x49, 0xb2, 0x96, 0xa5, 0xc9, 0x6c, 0xcc,
	0x4e, 0x0f, 0xeb, 0xeb, 0xfa, 0x22, 0xc2, 0x1a, 0x8a, 0x6e, 0x7a, 0x5b, 0xbe, 0x3f, 0xbf, 0x6f,
	0x19, 0x00, 0x5f, 0x11, 0xe7, 0x5d, 0xef, 0xc4, 0xe1, 0x4c, 0x42, 0x67, 0xfc, 0xcd, 0x52, 0x4c,
	0xdb, 0x35, 0x24, 0xe6, 0x57, 0xbe, 0xfd, 0x9e, 0xc0, 0x62, 0x53, 0x11, 0x6b, 0xf3, 0xb9, 0x37,
	0x5e, 0x10, 0x61, 0xba, 0xb3, 0x5c, 0xab, 0x6c, 0x95, 0xad, 0x4f, 0x75, 0x7c, 0xe3, 0x2b, 0x60,
	0xd5, 0xb8, 0x7d, 0xbd, 0x11, 0xd7, 0xd3, 0xd6, 0x14, 0x8e, 0x3f, 0xec, 0x56, 0x4d, 0x56, 0xd9,
	0x7a, 0x71, 0x7f, 0x9d, 0x47, 0x6e, 0x5e, 0x8c, 0x02, 0xfa, 0x48, 0x09, 0xef, 0x60, 0xd9, 0x5a,
	0x7e, 0xeb, 0x5d, 0x49, 0xa5, 0x6d, 0xac, 0x04, 0x75, 0x12, 0x87, 0x12, 0x15, 0x1f, 0xe1, 0x8c,
	0x98, 0x9a, 0xf0, 0x65, 0xde, 0x87, 0xff, 0xaa, 0x69, 0xdc, 0xbb, 0x1c, 0xf6, 0x9e, 0xfe, 0xbb,
	0x3a, 0x8d, 0xe3, 0x0b, 0x5c, 0x10, 0x3b, 0x0e, 0xad, 0xfd, 0xc3, 0x98, 0x45, 0x86, 0x3a, 0x30,
	0x12, 0x5f, 0x8f, 0x2b, 0x58, 0xc0, 0x79, 0x4d, 0x42, 0xde, 0xf2, 0xee, 0x80, 0x99, 0x47, 0xcc,
	0xd5, 0x80, 0x79, 0x4e, 0x6c, 0x3d, 0x2a, 0x94, 0xf3, 0x78, 0xec, 0x87, 0x9f, 0x00, 0x00, 0x00,
	0xff, 0xff, 0x9f, 0xa5, 0xae, 0x81, 0x91, 0x01, 0x00, 0x00,
}
