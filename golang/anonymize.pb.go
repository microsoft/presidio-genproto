// Code generated by protoc-gen-go. DO NOT EDIT.
// source: anonymize.proto

package types

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// AnonymizeApiRequest represents the request to the API HTTP service
type AnonymizeApiRequest struct {
	Text                 string   `protobuf:"bytes,1,opt,name=text" json:"text,omitempty"`
	AnalyzeTemplateId    string   `protobuf:"bytes,2,opt,name=analyzeTemplateId" json:"analyzeTemplateId,omitempty"`
	AnonymizeTemplateId  string   `protobuf:"bytes,3,opt,name=anonymizeTemplateId" json:"anonymizeTemplateId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AnonymizeApiRequest) Reset()         { *m = AnonymizeApiRequest{} }
func (m *AnonymizeApiRequest) String() string { return proto.CompactTextString(m) }
func (*AnonymizeApiRequest) ProtoMessage()    {}
func (*AnonymizeApiRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_anonymize_661d39234596ba7c, []int{0}
}
func (m *AnonymizeApiRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AnonymizeApiRequest.Unmarshal(m, b)
}
func (m *AnonymizeApiRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AnonymizeApiRequest.Marshal(b, m, deterministic)
}
func (dst *AnonymizeApiRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AnonymizeApiRequest.Merge(dst, src)
}
func (m *AnonymizeApiRequest) XXX_Size() int {
	return xxx_messageInfo_AnonymizeApiRequest.Size(m)
}
func (m *AnonymizeApiRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AnonymizeApiRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AnonymizeApiRequest proto.InternalMessageInfo

func (m *AnonymizeApiRequest) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *AnonymizeApiRequest) GetAnalyzeTemplateId() string {
	if m != nil {
		return m.AnalyzeTemplateId
	}
	return ""
}

func (m *AnonymizeApiRequest) GetAnonymizeTemplateId() string {
	if m != nil {
		return m.AnonymizeTemplateId
	}
	return ""
}

// AnonymizeRequest represents the request to the anonymize service via GRPC
type AnonymizeRequest struct {
	Text                 string             `protobuf:"bytes,1,opt,name=text" json:"text,omitempty"`
	Template             *AnonymizeTemplate `protobuf:"bytes,2,opt,name=template" json:"template,omitempty"`
	AnalyzeResults       []*AnalyzeResult   `protobuf:"bytes,3,rep,name=analyzeResults" json:"analyzeResults,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *AnonymizeRequest) Reset()         { *m = AnonymizeRequest{} }
func (m *AnonymizeRequest) String() string { return proto.CompactTextString(m) }
func (*AnonymizeRequest) ProtoMessage()    {}
func (*AnonymizeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_anonymize_661d39234596ba7c, []int{1}
}
func (m *AnonymizeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AnonymizeRequest.Unmarshal(m, b)
}
func (m *AnonymizeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AnonymizeRequest.Marshal(b, m, deterministic)
}
func (dst *AnonymizeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AnonymizeRequest.Merge(dst, src)
}
func (m *AnonymizeRequest) XXX_Size() int {
	return xxx_messageInfo_AnonymizeRequest.Size(m)
}
func (m *AnonymizeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AnonymizeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AnonymizeRequest proto.InternalMessageInfo

func (m *AnonymizeRequest) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *AnonymizeRequest) GetTemplate() *AnonymizeTemplate {
	if m != nil {
		return m.Template
	}
	return nil
}

func (m *AnonymizeRequest) GetAnalyzeResults() []*AnalyzeResult {
	if m != nil {
		return m.AnalyzeResults
	}
	return nil
}

// AnonymizeResponse represents the anonymize service response
type AnonymizeResponse struct {
	Text                 string   `protobuf:"bytes,1,opt,name=text" json:"text,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AnonymizeResponse) Reset()         { *m = AnonymizeResponse{} }
func (m *AnonymizeResponse) String() string { return proto.CompactTextString(m) }
func (*AnonymizeResponse) ProtoMessage()    {}
func (*AnonymizeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_anonymize_661d39234596ba7c, []int{2}
}
func (m *AnonymizeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AnonymizeResponse.Unmarshal(m, b)
}
func (m *AnonymizeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AnonymizeResponse.Marshal(b, m, deterministic)
}
func (dst *AnonymizeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AnonymizeResponse.Merge(dst, src)
}
func (m *AnonymizeResponse) XXX_Size() int {
	return xxx_messageInfo_AnonymizeResponse.Size(m)
}
func (m *AnonymizeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AnonymizeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AnonymizeResponse proto.InternalMessageInfo

func (m *AnonymizeResponse) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func init() {
	proto.RegisterType((*AnonymizeApiRequest)(nil), "types.AnonymizeApiRequest")
	proto.RegisterType((*AnonymizeRequest)(nil), "types.AnonymizeRequest")
	proto.RegisterType((*AnonymizeResponse)(nil), "types.AnonymizeResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AnonymizeServiceClient is the client API for AnonymizeService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AnonymizeServiceClient interface {
	Apply(ctx context.Context, in *AnonymizeRequest, opts ...grpc.CallOption) (*AnonymizeResponse, error)
}

type anonymizeServiceClient struct {
	cc *grpc.ClientConn
}

func NewAnonymizeServiceClient(cc *grpc.ClientConn) AnonymizeServiceClient {
	return &anonymizeServiceClient{cc}
}

func (c *anonymizeServiceClient) Apply(ctx context.Context, in *AnonymizeRequest, opts ...grpc.CallOption) (*AnonymizeResponse, error) {
	out := new(AnonymizeResponse)
	err := c.cc.Invoke(ctx, "/types.AnonymizeService/Apply", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AnonymizeServiceServer is the server API for AnonymizeService service.
type AnonymizeServiceServer interface {
	Apply(context.Context, *AnonymizeRequest) (*AnonymizeResponse, error)
}

func RegisterAnonymizeServiceServer(s *grpc.Server, srv AnonymizeServiceServer) {
	s.RegisterService(&_AnonymizeService_serviceDesc, srv)
}

func _AnonymizeService_Apply_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AnonymizeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AnonymizeServiceServer).Apply(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/types.AnonymizeService/Apply",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AnonymizeServiceServer).Apply(ctx, req.(*AnonymizeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AnonymizeService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "types.AnonymizeService",
	HandlerType: (*AnonymizeServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Apply",
			Handler:    _AnonymizeService_Apply_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "anonymize.proto",
}

func init() { proto.RegisterFile("anonymize.proto", fileDescriptor_anonymize_661d39234596ba7c) }

var fileDescriptor_anonymize_661d39234596ba7c = []byte{
	// 252 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4f, 0xcc, 0xcb, 0xcf,
	0xab, 0xcc, 0xcd, 0xac, 0x4a, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2d, 0xa9, 0x2c,
	0x48, 0x2d, 0x96, 0xe2, 0x49, 0xce, 0xcf, 0xcd, 0xcd, 0xcf, 0x83, 0x08, 0x4a, 0xf1, 0x95, 0xa4,
	0xe6, 0x16, 0xe4, 0x24, 0x96, 0x40, 0x15, 0x29, 0x75, 0x32, 0x72, 0x09, 0x3b, 0xc2, 0x34, 0x3a,
	0x16, 0x64, 0x06, 0xa5, 0x16, 0x96, 0xa6, 0x16, 0x97, 0x08, 0x09, 0x71, 0xb1, 0x94, 0xa4, 0x56,
	0x94, 0x48, 0x30, 0x2a, 0x30, 0x6a, 0x70, 0x06, 0x81, 0xd9, 0x42, 0x3a, 0x5c, 0x82, 0x89, 0x79,
	0x89, 0x39, 0x95, 0x55, 0xa9, 0x21, 0x50, 0x43, 0x3c, 0x53, 0x24, 0x98, 0xc0, 0x0a, 0x30, 0x25,
	0x84, 0x0c, 0xb8, 0x84, 0xe1, 0x2e, 0x42, 0x52, 0xcf, 0x0c, 0x56, 0x8f, 0x4d, 0x4a, 0x69, 0x16,
	0x23, 0x97, 0x00, 0xdc, 0x2d, 0xf8, 0x1c, 0x62, 0xc2, 0xc5, 0x01, 0xf3, 0x06, 0xd8, 0x7e, 0x6e,
	0x23, 0x09, 0x3d, 0xb0, 0x67, 0xf5, 0x1c, 0xd1, 0x8d, 0x0d, 0x82, 0xab, 0x14, 0xb2, 0xe1, 0xe2,
	0x83, 0xba, 0x32, 0x28, 0xb5, 0xb8, 0x34, 0xa7, 0xa4, 0x58, 0x82, 0x59, 0x81, 0x59, 0x83, 0xdb,
	0x48, 0x04, 0xae, 0x17, 0x49, 0x32, 0x08, 0x4d, 0xad, 0x92, 0x3a, 0x97, 0x20, 0x92, 0xdb, 0x8a,
	0x0b, 0xf2, 0xf3, 0x8a, 0x53, 0xb1, 0x39, 0xce, 0x28, 0x00, 0xc9, 0x13, 0xc1, 0xa9, 0x45, 0x65,
	0x99, 0xc9, 0x20, 0xab, 0x59, 0x1d, 0x0b, 0x0a, 0x72, 0x2a, 0x85, 0xc4, 0xd1, 0xdd, 0x09, 0xf5,
	0xa6, 0x94, 0x04, 0xa6, 0x04, 0xc4, 0x0e, 0x25, 0x86, 0x24, 0x36, 0x70, 0x54, 0x19, 0x03, 0x02,
	0x00, 0x00, 0xff, 0xff, 0x4b, 0x74, 0x97, 0x95, 0xe2, 0x01, 0x00, 0x00,
}
