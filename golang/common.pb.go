// Code generated by protoc-gen-go. DO NOT EDIT.
// source: common.proto

package types

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type FieldTypesEnum int32

const (
	FieldTypesEnum_CREDIT_CARD   FieldTypesEnum = 0
	FieldTypesEnum_CRYPTO        FieldTypesEnum = 1
	FieldTypesEnum_DATE_TIME     FieldTypesEnum = 2
	FieldTypesEnum_DOMAIN_NAME   FieldTypesEnum = 3
	FieldTypesEnum_EMAIL_ADDRESS FieldTypesEnum = 4
	FieldTypesEnum_IBAN_CODE     FieldTypesEnum = 5
	FieldTypesEnum_IP_ADDRESS    FieldTypesEnum = 6
	FieldTypesEnum_NRP           FieldTypesEnum = 7
	FieldTypesEnum_LOCATION      FieldTypesEnum = 8
	FieldTypesEnum_PERSON        FieldTypesEnum = 9
	FieldTypesEnum_PHONE_NUMBER  FieldTypesEnum = 10
)

var FieldTypesEnum_name = map[int32]string{
	0:  "CREDIT_CARD",
	1:  "CRYPTO",
	2:  "DATE_TIME",
	3:  "DOMAIN_NAME",
	4:  "EMAIL_ADDRESS",
	5:  "IBAN_CODE",
	6:  "IP_ADDRESS",
	7:  "NRP",
	8:  "LOCATION",
	9:  "PERSON",
	10: "PHONE_NUMBER",
}
var FieldTypesEnum_value = map[string]int32{
	"CREDIT_CARD":   0,
	"CRYPTO":        1,
	"DATE_TIME":     2,
	"DOMAIN_NAME":   3,
	"EMAIL_ADDRESS": 4,
	"IBAN_CODE":     5,
	"IP_ADDRESS":    6,
	"NRP":           7,
	"LOCATION":      8,
	"PERSON":        9,
	"PHONE_NUMBER":  10,
}

func (x FieldTypesEnum) String() string {
	return proto.EnumName(FieldTypesEnum_name, int32(x))
}
func (FieldTypesEnum) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_common_9f76e44cd4dc46da, []int{0}
}

type FieldTypes struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	LanguageCode         string   `protobuf:"bytes,2,opt,name=languageCode" json:"languageCode,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FieldTypes) Reset()         { *m = FieldTypes{} }
func (m *FieldTypes) String() string { return proto.CompactTextString(m) }
func (*FieldTypes) ProtoMessage()    {}
func (*FieldTypes) Descriptor() ([]byte, []int) {
	return fileDescriptor_common_9f76e44cd4dc46da, []int{0}
}
func (m *FieldTypes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FieldTypes.Unmarshal(m, b)
}
func (m *FieldTypes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FieldTypes.Marshal(b, m, deterministic)
}
func (dst *FieldTypes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FieldTypes.Merge(dst, src)
}
func (m *FieldTypes) XXX_Size() int {
	return xxx_messageInfo_FieldTypes.Size(m)
}
func (m *FieldTypes) XXX_DiscardUnknown() {
	xxx_messageInfo_FieldTypes.DiscardUnknown(m)
}

var xxx_messageInfo_FieldTypes proto.InternalMessageInfo

func (m *FieldTypes) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *FieldTypes) GetLanguageCode() string {
	if m != nil {
		return m.LanguageCode
	}
	return ""
}

type AnalyzeResult struct {
	Text                 string      `protobuf:"bytes,1,opt,name=text" json:"text,omitempty"`
	Field                *FieldTypes `protobuf:"bytes,2,opt,name=field" json:"field,omitempty"`
	Probability          float32     `protobuf:"fixed32,3,opt,name=probability" json:"probability,omitempty"`
	Location             *Location   `protobuf:"bytes,4,opt,name=location" json:"location,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *AnalyzeResult) Reset()         { *m = AnalyzeResult{} }
func (m *AnalyzeResult) String() string { return proto.CompactTextString(m) }
func (*AnalyzeResult) ProtoMessage()    {}
func (*AnalyzeResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_common_9f76e44cd4dc46da, []int{1}
}
func (m *AnalyzeResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AnalyzeResult.Unmarshal(m, b)
}
func (m *AnalyzeResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AnalyzeResult.Marshal(b, m, deterministic)
}
func (dst *AnalyzeResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AnalyzeResult.Merge(dst, src)
}
func (m *AnalyzeResult) XXX_Size() int {
	return xxx_messageInfo_AnalyzeResult.Size(m)
}
func (m *AnalyzeResult) XXX_DiscardUnknown() {
	xxx_messageInfo_AnalyzeResult.DiscardUnknown(m)
}

var xxx_messageInfo_AnalyzeResult proto.InternalMessageInfo

func (m *AnalyzeResult) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *AnalyzeResult) GetField() *FieldTypes {
	if m != nil {
		return m.Field
	}
	return nil
}

func (m *AnalyzeResult) GetProbability() float32 {
	if m != nil {
		return m.Probability
	}
	return 0
}

func (m *AnalyzeResult) GetLocation() *Location {
	if m != nil {
		return m.Location
	}
	return nil
}

type Location struct {
	Start                int32    `protobuf:"zigzag32,1,opt,name=start" json:"start,omitempty"`
	End                  int32    `protobuf:"zigzag32,2,opt,name=end" json:"end,omitempty"`
	Length               int32    `protobuf:"zigzag32,3,opt,name=length" json:"length,omitempty"`
	NewStart             int32    `protobuf:"zigzag32,4,opt,name=newStart" json:"newStart,omitempty"`
	NewEnd               int32    `protobuf:"zigzag32,5,opt,name=newEnd" json:"newEnd,omitempty"`
	NewLength            int32    `protobuf:"zigzag32,6,opt,name=newLength" json:"newLength,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Location) Reset()         { *m = Location{} }
func (m *Location) String() string { return proto.CompactTextString(m) }
func (*Location) ProtoMessage()    {}
func (*Location) Descriptor() ([]byte, []int) {
	return fileDescriptor_common_9f76e44cd4dc46da, []int{2}
}
func (m *Location) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Location.Unmarshal(m, b)
}
func (m *Location) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Location.Marshal(b, m, deterministic)
}
func (dst *Location) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Location.Merge(dst, src)
}
func (m *Location) XXX_Size() int {
	return xxx_messageInfo_Location.Size(m)
}
func (m *Location) XXX_DiscardUnknown() {
	xxx_messageInfo_Location.DiscardUnknown(m)
}

var xxx_messageInfo_Location proto.InternalMessageInfo

func (m *Location) GetStart() int32 {
	if m != nil {
		return m.Start
	}
	return 0
}

func (m *Location) GetEnd() int32 {
	if m != nil {
		return m.End
	}
	return 0
}

func (m *Location) GetLength() int32 {
	if m != nil {
		return m.Length
	}
	return 0
}

func (m *Location) GetNewStart() int32 {
	if m != nil {
		return m.NewStart
	}
	return 0
}

func (m *Location) GetNewEnd() int32 {
	if m != nil {
		return m.NewEnd
	}
	return 0
}

func (m *Location) GetNewLength() int32 {
	if m != nil {
		return m.NewLength
	}
	return 0
}

func init() {
	proto.RegisterType((*FieldTypes)(nil), "types.FieldTypes")
	proto.RegisterType((*AnalyzeResult)(nil), "types.AnalyzeResult")
	proto.RegisterType((*Location)(nil), "types.Location")
	proto.RegisterEnum("types.FieldTypesEnum", FieldTypesEnum_name, FieldTypesEnum_value)
}

func init() { proto.RegisterFile("common.proto", fileDescriptor_common_9f76e44cd4dc46da) }

var fileDescriptor_common_9f76e44cd4dc46da = []byte{
	// 414 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x92, 0xdd, 0xae, 0xd2, 0x40,
	0x14, 0x85, 0x2d, 0xd0, 0x9e, 0xb2, 0x81, 0x73, 0xa6, 0x3b, 0xc6, 0x34, 0xc6, 0x0b, 0xc2, 0x8d,
	0x27, 0x9a, 0x70, 0xa1, 0x4f, 0x30, 0xa7, 0x1d, 0x63, 0x13, 0xfa, 0x93, 0xa1, 0x5e, 0x78, 0xd5,
	0x94, 0xc3, 0x88, 0x24, 0x65, 0x86, 0xc0, 0x10, 0xc4, 0x57, 0xd1, 0xc7, 0xf0, 0x01, 0xcd, 0x4c,
	0xf9, 0xd1, 0xbb, 0xbd, 0xd6, 0x9a, 0xfd, 0xad, 0x9d, 0xa6, 0x30, 0x7c, 0x56, 0x9b, 0x8d, 0x92,
	0xd3, 0xed, 0x4e, 0x69, 0x85, 0xae, 0x3e, 0x6d, 0xc5, 0x7e, 0x12, 0x03, 0x7c, 0x5a, 0x8b, 0x66,
	0x59, 0x1a, 0x85, 0x08, 0x3d, 0x59, 0x6f, 0x44, 0xe8, 0x8c, 0x9d, 0xc7, 0x3e, 0xb7, 0x33, 0x4e,
	0x60, 0xd8, 0xd4, 0x72, 0x75, 0xa8, 0x57, 0x22, 0x52, 0x4b, 0x11, 0x76, 0x6c, 0xf6, 0x9f, 0x37,
	0xf9, 0xe5, 0xc0, 0x88, 0xca, 0xba, 0x39, 0xfd, 0x14, 0x5c, 0xec, 0x0f, 0x8d, 0x36, 0x24, 0x2d,
	0x7e, 0xe8, 0x0b, 0xc9, 0xcc, 0xf8, 0x16, 0xdc, 0x6f, 0xa6, 0xcb, 0x22, 0x06, 0x1f, 0x82, 0xa9,
	0x3d, 0x61, 0x7a, 0xeb, 0xe7, 0x6d, 0x8e, 0x63, 0x18, 0x6c, 0x77, 0x6a, 0x51, 0x2f, 0xd6, 0xcd,
	0x5a, 0x9f, 0xc2, 0xee, 0xd8, 0x79, 0xec, 0xf0, 0x7f, 0x2d, 0x7c, 0x0f, 0x7e, 0xa3, 0x9e, 0x6b,
	0xbd, 0x56, 0x32, 0xec, 0x59, 0xda, 0xc3, 0x99, 0x36, 0x3b, 0xdb, 0xfc, 0xfa, 0x60, 0xf2, 0xdb,
	0x01, 0xff, 0x62, 0xe3, 0x4b, 0x70, 0xf7, 0xba, 0xde, 0xb5, 0x97, 0x05, 0xbc, 0x15, 0x48, 0xa0,
	0x2b, 0x64, 0x7b, 0x58, 0xc0, 0xcd, 0x88, 0xaf, 0xc0, 0x6b, 0x84, 0x5c, 0xe9, 0xef, 0xb6, 0x3e,
	0xe0, 0x67, 0x85, 0xaf, 0xc1, 0x97, 0xe2, 0x38, 0xb7, 0x88, 0x9e, 0x4d, 0xae, 0xda, 0xec, 0x48,
	0x71, 0x64, 0x72, 0x19, 0xba, 0xed, 0x4e, 0xab, 0xf0, 0x0d, 0xf4, 0xa5, 0x38, 0xce, 0x5a, 0x9c,
	0x67, 0xa3, 0x9b, 0xf1, 0xee, 0x8f, 0x03, 0xf7, 0xb7, 0x6f, 0xc0, 0xe4, 0x61, 0x83, 0x0f, 0x30,
	0x88, 0x38, 0x8b, 0x93, 0xb2, 0x8a, 0x28, 0x8f, 0xc9, 0x0b, 0x04, 0xf0, 0x22, 0xfe, 0xb5, 0x28,
	0x73, 0xe2, 0xe0, 0x08, 0xfa, 0x31, 0x2d, 0x59, 0x55, 0x26, 0x29, 0x23, 0x1d, 0xf3, 0x36, 0xce,
	0x53, 0x9a, 0x64, 0x55, 0x46, 0x53, 0x46, 0xba, 0x18, 0xc0, 0x88, 0xa5, 0x34, 0x99, 0x55, 0x34,
	0x8e, 0x39, 0x9b, 0xcf, 0x49, 0xcf, 0xac, 0x24, 0x4f, 0x34, 0xab, 0xa2, 0x3c, 0x66, 0xc4, 0xc5,
	0x7b, 0x80, 0xa4, 0xb8, 0xc6, 0x1e, 0xde, 0x41, 0x37, 0xe3, 0x05, 0xb9, 0xc3, 0x21, 0xf8, 0xb3,
	0x3c, 0xa2, 0x65, 0x92, 0x67, 0xc4, 0x37, 0xa5, 0x05, 0xe3, 0xf3, 0x3c, 0x23, 0x7d, 0x24, 0x30,
	0x2c, 0x3e, 0xe7, 0x19, 0xab, 0xb2, 0x2f, 0xe9, 0x13, 0xe3, 0x04, 0x16, 0x9e, 0xfd, 0x8f, 0x3e,
	0xfe, 0x0d, 0x00, 0x00, 0xff, 0xff, 0x06, 0x02, 0x6a, 0x9d, 0x57, 0x02, 0x00, 0x00,
}
