// Code generated by protoc-gen-go. DO NOT EDIT.
// source: common.proto

package types

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type FieldTypes int32

const (
	FieldTypes_CREDIT_CARD   FieldTypes = 0
	FieldTypes_CRYPTO        FieldTypes = 1
	FieldTypes_DATE_TIME     FieldTypes = 2
	FieldTypes_DOMAIN_NAME   FieldTypes = 3
	FieldTypes_EMAIL_ADDRESS FieldTypes = 4
	FieldTypes_IBAN_CODE     FieldTypes = 5
	FieldTypes_IP_ADDRESS    FieldTypes = 6
	FieldTypes_NRP           FieldTypes = 7
	FieldTypes_LOCATION      FieldTypes = 8
	FieldTypes_PERSON        FieldTypes = 9
	FieldTypes_PHONE_NUMBER  FieldTypes = 10
)

var FieldTypes_name = map[int32]string{
	0:  "CREDIT_CARD",
	1:  "CRYPTO",
	2:  "DATE_TIME",
	3:  "DOMAIN_NAME",
	4:  "EMAIL_ADDRESS",
	5:  "IBAN_CODE",
	6:  "IP_ADDRESS",
	7:  "NRP",
	8:  "LOCATION",
	9:  "PERSON",
	10: "PHONE_NUMBER",
}
var FieldTypes_value = map[string]int32{
	"CREDIT_CARD":   0,
	"CRYPTO":        1,
	"DATE_TIME":     2,
	"DOMAIN_NAME":   3,
	"EMAIL_ADDRESS": 4,
	"IBAN_CODE":     5,
	"IP_ADDRESS":    6,
	"NRP":           7,
	"LOCATION":      8,
	"PERSON":        9,
	"PHONE_NUMBER":  10,
}

func (x FieldTypes) String() string {
	return proto.EnumName(FieldTypes_name, int32(x))
}
func (FieldTypes) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_common_0ba9a3019598a817, []int{0}
}

type AnalyzeResult struct {
	Text                 string     `protobuf:"bytes,1,opt,name=text" json:"text,omitempty"`
	Field                FieldTypes `protobuf:"varint,2,opt,name=field,enum=types.FieldTypes" json:"field,omitempty"`
	Probability          float32    `protobuf:"fixed32,3,opt,name=probability" json:"probability,omitempty"`
	Location             *Location  `protobuf:"bytes,4,opt,name=location" json:"location,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *AnalyzeResult) Reset()         { *m = AnalyzeResult{} }
func (m *AnalyzeResult) String() string { return proto.CompactTextString(m) }
func (*AnalyzeResult) ProtoMessage()    {}
func (*AnalyzeResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_common_0ba9a3019598a817, []int{0}
}
func (m *AnalyzeResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AnalyzeResult.Unmarshal(m, b)
}
func (m *AnalyzeResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AnalyzeResult.Marshal(b, m, deterministic)
}
func (dst *AnalyzeResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AnalyzeResult.Merge(dst, src)
}
func (m *AnalyzeResult) XXX_Size() int {
	return xxx_messageInfo_AnalyzeResult.Size(m)
}
func (m *AnalyzeResult) XXX_DiscardUnknown() {
	xxx_messageInfo_AnalyzeResult.DiscardUnknown(m)
}

var xxx_messageInfo_AnalyzeResult proto.InternalMessageInfo

func (m *AnalyzeResult) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *AnalyzeResult) GetField() FieldTypes {
	if m != nil {
		return m.Field
	}
	return FieldTypes_CREDIT_CARD
}

func (m *AnalyzeResult) GetProbability() float32 {
	if m != nil {
		return m.Probability
	}
	return 0
}

func (m *AnalyzeResult) GetLocation() *Location {
	if m != nil {
		return m.Location
	}
	return nil
}

type Location struct {
	Start                int32    `protobuf:"zigzag32,1,opt,name=start" json:"start,omitempty"`
	End                  int32    `protobuf:"zigzag32,2,opt,name=end" json:"end,omitempty"`
	Length               int32    `protobuf:"zigzag32,3,opt,name=length" json:"length,omitempty"`
	NewStart             int32    `protobuf:"zigzag32,4,opt,name=newStart" json:"newStart,omitempty"`
	NewEnd               int32    `protobuf:"zigzag32,5,opt,name=newEnd" json:"newEnd,omitempty"`
	NewLength            int32    `protobuf:"zigzag32,6,opt,name=newLength" json:"newLength,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Location) Reset()         { *m = Location{} }
func (m *Location) String() string { return proto.CompactTextString(m) }
func (*Location) ProtoMessage()    {}
func (*Location) Descriptor() ([]byte, []int) {
	return fileDescriptor_common_0ba9a3019598a817, []int{1}
}
func (m *Location) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Location.Unmarshal(m, b)
}
func (m *Location) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Location.Marshal(b, m, deterministic)
}
func (dst *Location) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Location.Merge(dst, src)
}
func (m *Location) XXX_Size() int {
	return xxx_messageInfo_Location.Size(m)
}
func (m *Location) XXX_DiscardUnknown() {
	xxx_messageInfo_Location.DiscardUnknown(m)
}

var xxx_messageInfo_Location proto.InternalMessageInfo

func (m *Location) GetStart() int32 {
	if m != nil {
		return m.Start
	}
	return 0
}

func (m *Location) GetEnd() int32 {
	if m != nil {
		return m.End
	}
	return 0
}

func (m *Location) GetLength() int32 {
	if m != nil {
		return m.Length
	}
	return 0
}

func (m *Location) GetNewStart() int32 {
	if m != nil {
		return m.NewStart
	}
	return 0
}

func (m *Location) GetNewEnd() int32 {
	if m != nil {
		return m.NewEnd
	}
	return 0
}

func (m *Location) GetNewLength() int32 {
	if m != nil {
		return m.NewLength
	}
	return 0
}

func init() {
	proto.RegisterType((*AnalyzeResult)(nil), "types.AnalyzeResult")
	proto.RegisterType((*Location)(nil), "types.Location")
	proto.RegisterEnum("types.FieldTypes", FieldTypes_name, FieldTypes_value)
}

func init() { proto.RegisterFile("common.proto", fileDescriptor_common_0ba9a3019598a817) }

var fileDescriptor_common_0ba9a3019598a817 = []byte{
	// 383 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x51, 0xdd, 0x8e, 0x93, 0x40,
	0x14, 0x76, 0xda, 0xc2, 0xd2, 0xd3, 0x76, 0x77, 0x38, 0x31, 0x86, 0x18, 0x2f, 0xc8, 0xde, 0x48,
	0x34, 0xe9, 0xc5, 0xfa, 0x04, 0xb3, 0x30, 0x46, 0x12, 0x18, 0xc8, 0x80, 0x17, 0x5e, 0x11, 0xba,
	0x3b, 0x2a, 0x09, 0x3b, 0x34, 0xed, 0x98, 0x5a, 0x5f, 0x45, 0x1f, 0xc2, 0x47, 0x34, 0x40, 0x6d,
	0xf7, 0xee, 0xfb, 0x39, 0xdf, 0x77, 0x4e, 0x66, 0x60, 0xf9, 0xd0, 0x3d, 0x3d, 0x75, 0x7a, 0xbd,
	0xdd, 0x75, 0xa6, 0x43, 0xcb, 0x1c, 0xb7, 0x6a, 0x7f, 0xfb, 0x9b, 0xc0, 0x8a, 0xe9, 0xba, 0x3d,
	0xfe, 0x52, 0x52, 0xed, 0x7f, 0xb4, 0x06, 0x11, 0x66, 0x46, 0xfd, 0x34, 0x1e, 0xf1, 0x49, 0x30,
	0x97, 0x03, 0xc6, 0xb7, 0x60, 0x7d, 0x6d, 0x54, 0xfb, 0xe8, 0x4d, 0x7c, 0x12, 0x5c, 0xdf, 0xb9,
	0xeb, 0x21, 0xbc, 0xfe, 0xd8, 0x6b, 0x65, 0x0f, 0xe5, 0xe8, 0xa3, 0x0f, 0x8b, 0xed, 0xae, 0xdb,
	0xd4, 0x9b, 0xa6, 0x6d, 0xcc, 0xd1, 0x9b, 0xfa, 0x24, 0x98, 0xc8, 0xe7, 0x12, 0xbe, 0x07, 0xa7,
	0xed, 0x1e, 0x6a, 0xd3, 0x74, 0xda, 0x9b, 0xf9, 0x24, 0x58, 0xdc, 0xdd, 0x9c, 0xda, 0x92, 0x93,
	0x2c, 0xcf, 0x03, 0xb7, 0x7f, 0x08, 0x38, 0xff, 0x65, 0x7c, 0x09, 0xd6, 0xde, 0xd4, 0xbb, 0xf1,
	0x32, 0x57, 0x8e, 0x04, 0x29, 0x4c, 0x95, 0x1e, 0x0f, 0x73, 0x65, 0x0f, 0xf1, 0x15, 0xd8, 0xad,
	0xd2, 0xdf, 0xcc, 0xf7, 0x61, 0xbd, 0x2b, 0x4f, 0x0c, 0x5f, 0x83, 0xa3, 0xd5, 0xa1, 0x18, 0x2a,
	0x66, 0x83, 0x73, 0xe6, 0x7d, 0x46, 0xab, 0x03, 0xd7, 0x8f, 0x9e, 0x35, 0x66, 0x46, 0x86, 0x6f,
	0x60, 0xae, 0xd5, 0x21, 0x19, 0xeb, 0xec, 0xc1, 0xba, 0x08, 0xef, 0xfe, 0x12, 0x80, 0xcb, 0x1b,
	0xe0, 0x0d, 0x2c, 0x42, 0xc9, 0xa3, 0xb8, 0xac, 0x42, 0x26, 0x23, 0xfa, 0x02, 0x01, 0xec, 0x50,
	0x7e, 0xc9, 0xcb, 0x8c, 0x12, 0x5c, 0xc1, 0x3c, 0x62, 0x25, 0xaf, 0xca, 0x38, 0xe5, 0x74, 0xd2,
	0xcf, 0x46, 0x59, 0xca, 0x62, 0x51, 0x09, 0x96, 0x72, 0x3a, 0x45, 0x17, 0x56, 0x3c, 0x65, 0x71,
	0x52, 0xb1, 0x28, 0x92, 0xbc, 0x28, 0xe8, 0xac, 0x8f, 0xc4, 0xf7, 0x4c, 0x54, 0x61, 0x16, 0x71,
	0x6a, 0xe1, 0x35, 0x40, 0x9c, 0x9f, 0x6d, 0x1b, 0xaf, 0x60, 0x2a, 0x64, 0x4e, 0xaf, 0x70, 0x09,
	0x4e, 0x92, 0x85, 0xac, 0x8c, 0x33, 0x41, 0x9d, 0x7e, 0x69, 0xce, 0x65, 0x91, 0x09, 0x3a, 0x47,
	0x0a, 0xcb, 0xfc, 0x53, 0x26, 0x78, 0x25, 0x3e, 0xa7, 0xf7, 0x5c, 0x52, 0xd8, 0xd8, 0xc3, 0xef,
	0x7f, 0xf8, 0x17, 0x00, 0x00, 0xff, 0xff, 0x42, 0xed, 0x93, 0x02, 0x0d, 0x02, 0x00, 0x00,
}
