// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cronjob.proto

package types

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CronJobApiRequest struct {
	CronJobTemplateId    string   `protobuf:"bytes,1,opt,name=CronJobTemplateId,json=cronJobTemplateId,proto3" json:"CronJobTemplateId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CronJobApiRequest) Reset()         { *m = CronJobApiRequest{} }
func (m *CronJobApiRequest) String() string { return proto.CompactTextString(m) }
func (*CronJobApiRequest) ProtoMessage()    {}
func (*CronJobApiRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cronjob_11557b2b7e078ea7, []int{0}
}
func (m *CronJobApiRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CronJobApiRequest.Unmarshal(m, b)
}
func (m *CronJobApiRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CronJobApiRequest.Marshal(b, m, deterministic)
}
func (dst *CronJobApiRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CronJobApiRequest.Merge(dst, src)
}
func (m *CronJobApiRequest) XXX_Size() int {
	return xxx_messageInfo_CronJobApiRequest.Size(m)
}
func (m *CronJobApiRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CronJobApiRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CronJobApiRequest proto.InternalMessageInfo

func (m *CronJobApiRequest) GetCronJobTemplateId() string {
	if m != nil {
		return m.CronJobTemplateId
	}
	return ""
}

type CronJobRequest struct {
	Name                 string       `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description          string       `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Trigger              *Trigger     `protobuf:"bytes,3,opt,name=trigger,proto3" json:"trigger,omitempty"`
	ScanRequest          *ScanRequest `protobuf:"bytes,4,opt,name=scanRequest,proto3" json:"scanRequest,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *CronJobRequest) Reset()         { *m = CronJobRequest{} }
func (m *CronJobRequest) String() string { return proto.CompactTextString(m) }
func (*CronJobRequest) ProtoMessage()    {}
func (*CronJobRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cronjob_11557b2b7e078ea7, []int{1}
}
func (m *CronJobRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CronJobRequest.Unmarshal(m, b)
}
func (m *CronJobRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CronJobRequest.Marshal(b, m, deterministic)
}
func (dst *CronJobRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CronJobRequest.Merge(dst, src)
}
func (m *CronJobRequest) XXX_Size() int {
	return xxx_messageInfo_CronJobRequest.Size(m)
}
func (m *CronJobRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CronJobRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CronJobRequest proto.InternalMessageInfo

func (m *CronJobRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CronJobRequest) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *CronJobRequest) GetTrigger() *Trigger {
	if m != nil {
		return m.Trigger
	}
	return nil
}

func (m *CronJobRequest) GetScanRequest() *ScanRequest {
	if m != nil {
		return m.ScanRequest
	}
	return nil
}

type CronJobResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CronJobResponse) Reset()         { *m = CronJobResponse{} }
func (m *CronJobResponse) String() string { return proto.CompactTextString(m) }
func (*CronJobResponse) ProtoMessage()    {}
func (*CronJobResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cronjob_11557b2b7e078ea7, []int{2}
}
func (m *CronJobResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CronJobResponse.Unmarshal(m, b)
}
func (m *CronJobResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CronJobResponse.Marshal(b, m, deterministic)
}
func (dst *CronJobResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CronJobResponse.Merge(dst, src)
}
func (m *CronJobResponse) XXX_Size() int {
	return xxx_messageInfo_CronJobResponse.Size(m)
}
func (m *CronJobResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CronJobResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CronJobResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*CronJobApiRequest)(nil), "types.CronJobApiRequest")
	proto.RegisterType((*CronJobRequest)(nil), "types.CronJobRequest")
	proto.RegisterType((*CronJobResponse)(nil), "types.CronJobResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CronJobServiceClient is the client API for CronJobService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CronJobServiceClient interface {
	Apply(ctx context.Context, in *CronJobRequest, opts ...grpc.CallOption) (*CronJobResponse, error)
}

type cronJobServiceClient struct {
	cc *grpc.ClientConn
}

func NewCronJobServiceClient(cc *grpc.ClientConn) CronJobServiceClient {
	return &cronJobServiceClient{cc}
}

func (c *cronJobServiceClient) Apply(ctx context.Context, in *CronJobRequest, opts ...grpc.CallOption) (*CronJobResponse, error) {
	out := new(CronJobResponse)
	err := c.cc.Invoke(ctx, "/types.CronJobService/Apply", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CronJobServiceServer is the server API for CronJobService service.
type CronJobServiceServer interface {
	Apply(context.Context, *CronJobRequest) (*CronJobResponse, error)
}

func RegisterCronJobServiceServer(s *grpc.Server, srv CronJobServiceServer) {
	s.RegisterService(&_CronJobService_serviceDesc, srv)
}

func _CronJobService_Apply_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CronJobRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CronJobServiceServer).Apply(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/types.CronJobService/Apply",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CronJobServiceServer).Apply(ctx, req.(*CronJobRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CronJobService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "types.CronJobService",
	HandlerType: (*CronJobServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Apply",
			Handler:    _CronJobService_Apply_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "cronjob.proto",
}

func init() { proto.RegisterFile("cronjob.proto", fileDescriptor_cronjob_11557b2b7e078ea7) }

var fileDescriptor_cronjob_11557b2b7e078ea7 = []byte{
	// 245 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x90, 0x31, 0x4f, 0xc3, 0x30,
	0x10, 0x85, 0x09, 0xb4, 0x20, 0x2e, 0x22, 0x28, 0x27, 0x81, 0xa2, 0x4c, 0x51, 0xa6, 0x0c, 0x28,
	0x43, 0x61, 0x60, 0x8d, 0x98, 0xe8, 0x98, 0xf6, 0x0f, 0x24, 0xee, 0xa9, 0x32, 0x6a, 0xed, 0xc3,
	0x36, 0x48, 0xfd, 0x43, 0xfc, 0x4e, 0x84, 0xe3, 0x86, 0x36, 0xdb, 0xe9, 0x7b, 0xef, 0x9e, 0xef,
	0x19, 0xee, 0x84, 0xd1, 0xea, 0x43, 0xf7, 0x35, 0x1b, 0xed, 0x34, 0xce, 0xdd, 0x81, 0xc9, 0xe6,
	0x89, 0xa3, 0x3d, 0xef, 0x3a, 0x47, 0x03, 0xce, 0xc1, 0x8a, 0x4e, 0x0d, 0x73, 0xd9, 0x40, 0xfa,
	0x66, 0xb4, 0x5a, 0xea, 0xbe, 0x61, 0xd9, 0xd2, 0xe7, 0x17, 0x59, 0x87, 0x4f, 0x23, 0x5c, 0x87,
	0xcd, 0xf7, 0x4d, 0x16, 0x15, 0x51, 0x75, 0xdb, 0xa6, 0x62, 0x2a, 0x94, 0x3f, 0x11, 0x24, 0xc1,
	0x7e, 0x0c, 0x40, 0x98, 0xa9, 0x6e, 0x4f, 0x61, 0xc7, 0xcf, 0x58, 0x40, 0xbc, 0x21, 0x2b, 0x8c,
	0x64, 0x27, 0xb5, 0xca, 0x2e, 0xbd, 0x74, 0x8a, 0xb0, 0x82, 0x1b, 0x67, 0xe4, 0x76, 0x4b, 0x26,
	0xbb, 0x2a, 0xa2, 0x2a, 0x5e, 0x24, 0xb5, 0x2f, 0x50, 0xaf, 0x07, 0xda, 0x1e, 0x65, 0x7c, 0x81,
	0xf8, 0xaf, 0x43, 0x78, 0x2e, 0x9b, 0x79, 0x37, 0x06, 0xf7, 0xea, 0x5f, 0x69, 0x4f, 0x6d, 0x65,
	0x0a, 0xf7, 0xe3, 0x9d, 0x96, 0xb5, 0xb2, 0xb4, 0x58, 0x8e, 0xa7, 0xaf, 0xc8, 0x7c, 0x4b, 0x41,
	0xf8, 0x0a, 0xf3, 0x86, 0x79, 0x77, 0xc0, 0x87, 0x10, 0x77, 0x5e, 0x2d, 0x7f, 0x9c, 0xe2, 0x21,
	0xa9, 0xbc, 0xe8, 0xaf, 0xfd, 0x8f, 0x3e, 0xff, 0x06, 0x00, 0x00, 0xff, 0xff, 0xd7, 0xbf, 0x60,
	0x01, 0x85, 0x01, 0x00, 0x00,
}
