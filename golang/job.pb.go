// Code generated by protoc-gen-go. DO NOT EDIT.
// source: job.proto

package types

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type JobRequest struct {
	Name                 string       `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Description          string       `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	Trigger              *Trigger     `protobuf:"bytes,3,opt,name=trigger" json:"trigger,omitempty"`
	ScanRequest          *ScanRequest `protobuf:"bytes,4,opt,name=scanRequest" json:"scanRequest,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *JobRequest) Reset()         { *m = JobRequest{} }
func (m *JobRequest) String() string { return proto.CompactTextString(m) }
func (*JobRequest) ProtoMessage()    {}
func (*JobRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_job_18df303304b2b163, []int{0}
}
func (m *JobRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JobRequest.Unmarshal(m, b)
}
func (m *JobRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JobRequest.Marshal(b, m, deterministic)
}
func (dst *JobRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JobRequest.Merge(dst, src)
}
func (m *JobRequest) XXX_Size() int {
	return xxx_messageInfo_JobRequest.Size(m)
}
func (m *JobRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_JobRequest.DiscardUnknown(m)
}

var xxx_messageInfo_JobRequest proto.InternalMessageInfo

func (m *JobRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *JobRequest) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *JobRequest) GetTrigger() *Trigger {
	if m != nil {
		return m.Trigger
	}
	return nil
}

func (m *JobRequest) GetScanRequest() *ScanRequest {
	if m != nil {
		return m.ScanRequest
	}
	return nil
}

type JobResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JobResponse) Reset()         { *m = JobResponse{} }
func (m *JobResponse) String() string { return proto.CompactTextString(m) }
func (*JobResponse) ProtoMessage()    {}
func (*JobResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_job_18df303304b2b163, []int{1}
}
func (m *JobResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JobResponse.Unmarshal(m, b)
}
func (m *JobResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JobResponse.Marshal(b, m, deterministic)
}
func (dst *JobResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JobResponse.Merge(dst, src)
}
func (m *JobResponse) XXX_Size() int {
	return xxx_messageInfo_JobResponse.Size(m)
}
func (m *JobResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_JobResponse.DiscardUnknown(m)
}

var xxx_messageInfo_JobResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*JobRequest)(nil), "types.JobRequest")
	proto.RegisterType((*JobResponse)(nil), "types.JobResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// JobServiceClient is the client API for JobService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type JobServiceClient interface {
	Apply(ctx context.Context, in *JobRequest, opts ...grpc.CallOption) (*JobResponse, error)
}

type jobServiceClient struct {
	cc *grpc.ClientConn
}

func NewJobServiceClient(cc *grpc.ClientConn) JobServiceClient {
	return &jobServiceClient{cc}
}

func (c *jobServiceClient) Apply(ctx context.Context, in *JobRequest, opts ...grpc.CallOption) (*JobResponse, error) {
	out := new(JobResponse)
	err := c.cc.Invoke(ctx, "/types.JobService/Apply", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// JobServiceServer is the server API for JobService service.
type JobServiceServer interface {
	Apply(context.Context, *JobRequest) (*JobResponse, error)
}

func RegisterJobServiceServer(s *grpc.Server, srv JobServiceServer) {
	s.RegisterService(&_JobService_serviceDesc, srv)
}

func _JobService_Apply_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(JobRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobServiceServer).Apply(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/types.JobService/Apply",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobServiceServer).Apply(ctx, req.(*JobRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _JobService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "types.JobService",
	HandlerType: (*JobServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Apply",
			Handler:    _JobService_Apply_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "job.proto",
}

func init() { proto.RegisterFile("job.proto", fileDescriptor_job_18df303304b2b163) }

var fileDescriptor_job_18df303304b2b163 = []byte{
	// 211 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x8f, 0xc1, 0x4e, 0x86, 0x30,
	0x10, 0x84, 0xad, 0xfe, 0xbf, 0x86, 0x6d, 0x24, 0x71, 0x4f, 0x0d, 0x27, 0xc2, 0x89, 0x13, 0x31,
	0xe8, 0xd9, 0xc4, 0xab, 0xc7, 0xe2, 0x0b, 0x00, 0x6e, 0x48, 0x0d, 0xb4, 0xb5, 0xad, 0x26, 0xbc,
	0x8e, 0x4f, 0x6a, 0x6c, 0xf9, 0x03, 0xb7, 0xcd, 0x37, 0xd3, 0xce, 0x0c, 0x64, 0x9f, 0x66, 0x68,
	0xac, 0x33, 0xc1, 0xe0, 0x39, 0xac, 0x96, 0x7c, 0x91, 0x07, 0x5a, 0xec, 0xdc, 0x07, 0x4a, 0xb8,
	0x00, 0x3f, 0xf6, 0x3a, 0xdd, 0xd5, 0x2f, 0x03, 0x78, 0x33, 0x83, 0xa4, 0xaf, 0x6f, 0xf2, 0x01,
	0x11, 0x4e, 0xba, 0x5f, 0x48, 0xb0, 0x92, 0xd5, 0x99, 0x8c, 0x37, 0x96, 0xc0, 0x3f, 0xc8, 0x8f,
	0x4e, 0xd9, 0xa0, 0x8c, 0x16, 0xd7, 0x51, 0x3a, 0x22, 0xac, 0xe1, 0x2e, 0x38, 0x35, 0x4d, 0xe4,
	0xc4, 0x4d, 0xc9, 0x6a, 0xde, 0xe6, 0x4d, 0x4c, 0x6e, 0xde, 0x13, 0x95, 0x17, 0x19, 0x9f, 0x81,
	0xff, 0x87, 0x6f, 0x71, 0xe2, 0x14, 0xdd, 0xb8, 0xb9, 0xbb, 0x5d, 0x91, 0x47, 0x5b, 0x75, 0x0f,
	0x3c, 0x76, 0xf4, 0xd6, 0x68, 0x4f, 0xed, 0x4b, 0xac, 0xdc, 0x91, 0xfb, 0x51, 0x23, 0xe1, 0x23,
	0x9c, 0x5f, 0xad, 0x9d, 0x57, 0x7c, 0xd8, 0xbe, 0xd9, 0xe7, 0x14, 0x78, 0x44, 0xe9, 0x75, 0x75,
	0x35, 0xdc, 0xc6, 0xe9, 0x4f, 0x7f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x8a, 0xf7, 0xd5, 0x02, 0x2a,
	0x01, 0x00, 0x00,
}
